name: Build and Deploy - LLM Service

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install pre-commit
          pre-commit install

      - name: Run pre-commit
        run: pre-commit run --files ./*

  run_tests:
    runs-on: ubuntu-latest
    needs: precommit
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
          pip3 install pytest pytest-cov httpx

      - name: Run tests
        working-directory: microservice_llm
        run: |
          python -m pytest tests/ --cov=. --cov-report=xml

  deploy:
    needs: [run_tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd microservice_llm
            git pull origin main
            docker-compose -f docker-compose-micro.yaml down
            docker-compose -f docker-compose-micro.yaml up -d --build

  health_check:
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check service health
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            curl -f http://localhost:8000/health || exit 1